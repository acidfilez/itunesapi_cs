//
//  DetailsRouter.swift
//  itunesapi_cs
//
//  Created by Alejandro Melo Domínguez on 7/29/19.
//  Copyright (c) 2019 Alejandro Melo Domínguez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol DetailsRoutingLogic {
    func routeToMediaPlayer()
}

protocol DetailsDataPassing {
    var dataStore: DetailsDataStore? { get }
}

class DetailsRouter: NSObject, DetailsRoutingLogic, DetailsDataPassing {
    weak var viewController: DetailsViewController?
    var dataStore: DetailsDataStore?

    // MARK: Routing

    func routeToMediaPlayer() {
        let storyboard = UIStoryboard(name: "MediaPlayerViewController", bundle: nil)
        let destinationVC = storyboard.instantiateInitialViewController() as! MediaPlayerViewController
        var destinationDS = destinationVC.router!.dataStore!
        passDataToDetails(source: dataStore!, destination: &destinationDS)
        navigateToDetails(source: viewController!, destination: destinationVC)
    }

    // MARK: Navigation

    func navigateToDetails(source: DetailsViewController, destination: MediaPlayerViewController) {
        destination.modalTransitionStyle = .crossDissolve
        destination.modalPresentationStyle = .fullScreen
        source.navigationController?.present(destination, animated: true, completion: nil)
    }

    // MARK: Passing data

    func passDataToDetails(source: DetailsDataStore, destination: inout MediaPlayerDataStore) {
        destination.media = source.media
    }
}
