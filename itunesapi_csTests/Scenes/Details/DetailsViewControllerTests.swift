//
//  DetailsViewControllerTests.swift
//  itunesapi_cs
//
//  Created by Alejandro Melo Domínguez on 7/29/19.
//  Copyright (c) 2019 Alejandro Melo Domínguez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import itunesapi_cs
import XCTest

class DetailsViewControllerTests: XCTestCase {
    // MARK: Subject under test
    var sut: DetailsViewController!
    var window: UIWindow!

    // MARK: Test lifecycle

    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupDetailsViewController()
    }

    override func tearDown() {
        window = nil
        super.tearDown()
    }

    // MARK: Test setup
    
    func setupDetailsViewController() {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "DetailsViewController", bundle: bundle)
        sut = (storyboard.instantiateInitialViewController() as! DetailsViewController)
    }

    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }

    // MARK: Tests

    func testSettingAlbumShouldSetArtistAndAlbumNames() {
        // Given
        let album = [
            Media(
                wrapperType: "wrapper type",
                artistName: "artist",
                collectionId: 1,
                collectionName: "collection name",
                kind: "kind",
                trackId: 1,
                trackName: "track 1",
                trackNumber: 1,
                artwork: "artwork",
                previewUrl: nil
            ),
            Media(
                wrapperType: "collection", // collection is used for grabbing album data
                artistName: "The artist name",
                collectionId: 1,
                collectionName: "The album name",
                kind: "kind",
                trackId: 1,
                trackName: "track 1",
                trackNumber: 1,
                artwork: "artwork",
                previewUrl: nil
            )
        ]
        let viewModel = Details.ViewModel(
            artistName: album.albumInfo?.artistName ?? "",
            albumName: album.albumInfo?.collectionName ?? "",
            albumCoverImage: URL(string: "https://is1-ssl.mzstatic.com/image/thumb/Music118/v4/59/f2/cb/59f2cbb4-6800-2298-8de5-070caae3ec6a/00050086085873.rgb.jpg/100x100w.jpg"),
            tracks: []
        )

        // When
        loadView()
        sut.displayDataForAlbum(viewModel: viewModel)

        // Then
        XCTAssertEqual(sut.artistLabel.text, album.albumInfo?.artistName)
        XCTAssertEqual(sut.albumLabel.text, album.albumInfo?.collectionName)
    }

    func testSettingAlbumShouldUpdateTableViewRows() {
        // Given
        let album = [
            Media(
                wrapperType: "track",
                artistName: "artist",
                collectionId: 1,
                collectionName: "collection name",
                kind: "kind",
                trackId: 1,
                trackName: "track 1",
                trackNumber: 1,
                artwork: "artwork",
                previewUrl: nil
            ),
            Media(
                wrapperType: "collection", // collection is used for grabbing album data
                artistName: "The artist name",
                collectionId: 1,
                collectionName: "The album name",
                kind: "kind",
                trackId: 1,
                trackName: "track 1",
                trackNumber: 1,
                artwork: "artwork",
                previewUrl: nil
            )
        ]
        let viewModel = Details.ViewModel(
            artistName: album.albumInfo?.artistName ?? "",
            albumName: album.albumInfo?.collectionName ?? "",
            albumCoverImage: URL(string: "https://is1-ssl.mzstatic.com/image/thumb/Music118/v4/59/f2/cb/59f2cbb4-6800-2298-8de5-070caae3ec6a/00050086085873.rgb.jpg/100x100w.jpg"),
            tracks: album.tracks
        )

        // When
        loadView()
        sut.displayDataForAlbum(viewModel: viewModel)

        // Then
        XCTAssertEqual(sut.tableView(sut.tableView, numberOfRowsInSection: 0), album.tracks.count)
    }
}
